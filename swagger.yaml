host: localhost:3000
basePath: /api/v1


# Server section with a single URL
servers:
  - url: http://localhost:3000

tags:
  - name: auth
    description: authentication API

paths:
  # [POST] signup
  /signup:
    post:
      tags:
        - auth
      summary: Sign Up
      description: Creates a new user account.
      parameters:
        - name: body
          in: body
          description: User registration details.
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        '201':
          description: User account created successfully.
        '400':
          description: Bad request. Invalid or incomplete user registration details.
        '409':
          description: Conflict. User with same email already exists.
        '500':
          description: Server error.

  # [POST] login
  /login:
    post:
      tags:
        - auth
      summary: Log In
      description: Logs in a user with email and password.
      parameters:
        - name: body
          in: body
          description: User login details.
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        '200':
          description: User logged in successfully.
        '400':
          description: Bad request. Invalid or incomplete user login details.
        '401':
          description: Unauthorized. Invalid email or password.
        '500':
          description: Server error.

  # [POST] logout
  /logout:
    post:
      tags:
        - auth
      summary: Log Out
      description: Logs out the currently logged in user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User logged out successfully.
        '401':
          description: Unauthorized. No user currently logged in.
        '500':
          description: Server error.





# [GET] users

  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  paths:
  /orders:
    get:
      tags:
        - orders
      summary: Get all orders
      description: Get all orders
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'

    post:
      tags:
        - orders
      summary: Create a new order
      description: Create a new order
      parameters:
        - in: body
          name: body
          description: Order object
          required: true
          schema:
            $ref: '#/definitions/CreateOrderDto'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /orders/{id}:
    get:
      tags:
        - orders
      summary: Get an order by ID
      description: Get an order by ID
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '404':
          description: Order not found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

    put:
      tags:
        - orders
      summary: Update an order by ID
      description: Update an order by ID
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          type: integer
        - in: body
          name: body
          description: Order object
          required: true
          schema:
            $ref: '#/definitions/CreateOrderDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '500':
          description: Internal Server Error

    delete:
      tags:
        - orders
      summary: Delete an order by ID
      description: Delete an order by ID
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Order not found
        '500':
          description: Internal Server Error

  /orders/{id}/status:
    put:
      tags:
        - orders
      summary: Update the status of an order by ID
      description: Update the status of an order by ID
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          type: integer
        - in: body
          name: body
          description: Order status object
          required: true




  /order-requests:
    post:
      summary: Create a new order request
      description: |
        Creates a new order request with the provided data.
        Requires authentication.
      tags:
        - Order Requests
      parameters:
        - in: body
          name: orderRequest
          description: The order request data to be created
          required: true
          schema:
            $ref: '#/definitions/CreateOrderRequestDto'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/OrderRequest'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /{id}/accept:
    put:
      summary: Approve an order request
      description: |
        Approves the order request with the provided ID.
        Requires authentication.
      tags:
        - Order Requests
      parameters:
        - in: path
          name: id
          description: The ID of the order request to approve
          required: true
          type: integer
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          format: Bearer {token}
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /{id}/reject:
    put:
      summary: Reject an order request
      description: |
        Rejects the order request with the provided ID.
        Requires authentication.
      tags:
        - Order Requests
      parameters:
        - in: path
          name: id
          description: The ID of the order request to reject
          required: true
          type: integer
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          type: string
          format: Bearer {token}
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error




# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
      role:
        type: string
        description: Role of the user to be created. Default is 'user'.
        enum:
          - customer
          - rider
          - 'third party'
  OrderRequest:
    type: object
    properties:
      OrderId:
        type: integer
        example: 343
      quantity:
        type: integer
        example: 2
      status:
        type: string
        example: PENDING
    required:
      - id
      - product
      - quantity
      - status




schemes:
 - https
 - http
